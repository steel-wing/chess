actor Client
participant Server
participant Service
participant DataAccess
database db

group #navy Registration #white
Client -> Server: [POST] /user\n{username, password, email}
Server -> Service: register(username, password, email)
Service -> DataAccess: getUser(username)
DataAccess -> db:SELECT username from user
DataAccess --> Service: null
Service -> DataAccess: createUser(username, password)
DataAccess -> db: INSERT username, password, email INTO user
Service -> DataAccess: createAuth(username)
DataAccess -> db: INSERT username, authToken INTO auth
Service<--DataAccess:authToken
Server<--Service:authToken
Client<--Server:200\n{username, authToken}
end

group #orange Login #white
Client -> Server: [POST] /session\n{username, password}
Server->Service:login(username, password)
Service->DataAccess:getUser(username)
DataAccess->db:SELECT username from user
Service<--DataAccess:authToken
Service->DataAccess:verifyToken(authToken)
DataAccess->db:SELECT authToken from auth
Service<--DataAccess:userExists == TRUE
Service->DataAccess:verifyPassword(password)
DataAccess->db:SELECT password from user
Service<--DataAccess:authToken
Server<--Service:authToken
Client<--Server:200\n{username, authToken}
end

group #green Logout #white
Client -> Server: [DELETE] /session\nauthToken
Server->Service:logout(authToken)
Service->DataAccess:getUser(username)
DataAccess->db:SELECT username from user
Service<--DataAccess:authToken
Service->DataAccess:verifyToken(authToken)
DataAccess->db:SELECT authToken from auth
Service<--DataAccess:userExists == TRUE
Service->DataAccess:clearSession(authToken)
DataAccess->db:DELETE authToken from auth
Service<--DataAccess:loggedOut == True
Server<--Service:loggedOut == True
Client<--Server:200
end

group #red List Games #white
Client -> Server: [GET] /game\nauthToken
Server->Service:getGames(authToken)
Service->DataAccess:verifyToken(authToken)
DataAccess->db:SELECT authToken from auth
Service<--DataAccess:userExists == TRUE
Service->DataAccess:getGames()
DataAccess->db:SELECT games
Service<--DataAccess:games
Server<--Service:games
Client<--Server:200\n{games}
end

group #purple Create Game #white
Client -> Server: [POST] /game\nauthToken\n{gameName}
Server->Service:start(gameName, authToken)
Service->DataAccess:getUser(authToken)
DataAccess->db:SELECT username from auth
Service<--DataAccess:userExists == TRUE
Service->DataAccess:getGame(gameName)
DataAccess->db:SELECT gameName from game
Service<--DataAccess:null
Service->DataAccess:createGame(gameName)

DataAccess->db:INSERT gameName INTO game
Service->DataAccess:createGameID(gameName)
DataAccess->db:INSERT gameID INTO game
Service<--DataAccess:gameID
Server<--Service:gameID
Client<--Server:200\n{authToken}
end

group #yellow Join Game #black
Client -> Server: [PUT] /game\nauthToken\n{ClientColor, gameID}
Server->Service:joinGame(authToken, ClientColor, gameID)
Service->DataAccess:getUser(username)
DataAccess->db:SELECT username from user
Service<--DataAccess:authToken
Service->DataAccess:verifyToken(authToken)
DataAccess->db:SELECT authToken from auth
Service<--DataAccess:userExists == TRUE
Service->DataAccess:getGame(gameID)
DataAccess->db:SELECT gameID from game
Service->DataAccess:chooseTeam(ClientColor)
DataAccess->db:INSERT username into ClientColor???
Service<-DataAccess:gameJoined == TRUE
Server<-Service:gameJoined == TRUE
Client<-Server:200
end

group #gray Clear application #white
Client -> Server: [DELETE] /db
Server->Service:delete()
Service->DataAccess:delete()
DataAccess->db:DELETE sessions (authData)
DataAccess->db:DELETE users (userData)
DataAccess->db:DELETE games (gameData)
Service<--DataAccess:itsDone == TRUE
Server<--Service:itsDone == TRUE
Client<--Server:200
end
